name: CI/CD using github actions & docker

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          
          
      # gradle caching - 빌드 시간 향상
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

  
      # gradle build
      - name: Build with Gradle
        run: ./gradlew build -x test

      # docker build & push to production
      - name: Docker build & push to prod
        if: contains(github.ref, 'main')
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/fifadata .
          docker push ${{ secrets.DOCKER_USERNAME }}/fifadata

      

#       ## deploy to production
#       - name: Deploy to prod
#         uses: appleboy/ssh-action@master
#         id: deploy-prod
#         if: contains(github.ref, 'main')
#         with:
#           host: ${{ secrets.HOST_PROD }} # EC2 퍼블릭 IPv4 DNS
#           username: ubuntu
#           key: ${{ secrets.PRIVATE_KEY }}
#           envs: GITHUB_SHA
#           script: |
#             docker pull ${{ secrets.DOCKER_USERNAME }}/fifadata
#             docker run -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/fifadata
#             docker image prune -f
  deploy:
    needs: CI-CD
    runs-on: ubuntu-latest
    steps:
        - name: Deploy to prod
          uses: appleboy/ssh-action@v0.1.9 
          id: deploy-prod
          with:
            host: ${{ secrets.HOST_PROD }} # EC2 퍼블릭 IPv4 DNS
            username: ubuntu
            key: ${{ secrets.PRIVATE_KEY }}
            envs: GITHUB_SHA
            script: |
              sudo docker ps
              sudo docker pull ${{ secrets.DOCKER_USERNAME }}/docker-test-prod
              sudo docker run -d -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/docker-test-prod
              sudo docker image prune -f
#       - name: Setup SSH
#         uses: webfactory/ssh-agent@v0.5.4
#         with:
#           username: ${{ secrets.USER_NAME }}
#           host: ${{ secrets.HOST_PROD }}
#           ssh-private-key: ${{ secrets.PRIVATE_KEY }}
          
#       - name: Execute remote commands
#         run: |
#           ssh "docker pull ${{ secrets.DOCKER_USERNAME }}/fifadata"
#           ssh "docker run -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/fifadata"
#           ssh "image prune -f"
#         - name: Add remote server to known hosts
#           run: |
#             mkdir -p ~/.ssh
#             ssh-keyscan ${{ secrets.HOST_PROD }} >> ~/.ssh/known_hosts
#         - name: Setup SSH
#           uses: webfactory/ssh-agent@v0.5.4
#           with:
#             ssh-private-key: ${{ secrets.PRIVATE_KEY }}
#         - name: Execute remote commands
#           run: |
#             ssh -v ubuntu@${{ secrets.HOST_PROD }} "docker pull hyuksoon/fifadata"
#             ssh -v ubuntu@${{ secrets.HOST_PROD }} "docker run -p 8080:8080 hyuksoon/fifadata"
#             ssh -v ubuntu@${{ secrets.HOST_PROD }} "image prune -f"
